{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"<p>Taikun Resources provides you news and upcomming trends from the world of Taikun, Automation, Dev/Ops, Kubernetes, conteiners and much more.</p>","title":"Welcome to Taikun Resources"},{"location":"#blog","text":"","title":"Blog"},{"location":"#use-cases","text":"","title":"Use Cases"},{"location":"#dictionary","text":"","title":"Dictionary"},{"location":"blog/","text":"<p>In the Taikun Blog you will find useful articles about news from the world of Kubernetes ecosystem and Taikun.</p>","title":"Taikun Blog"},{"location":"blog/01/","text":"<p> </p>","title":"1 - The Taikun way to save time and money while using Kubernetes"},{"location":"blog/01/#the-taikun-way-to-save-time-and-money-while-using-kubernetes","text":"<p>Kubernetes is now a de facto standard for container orchestration in any IT infrastructure today. </p> <p>Every major cloud services provider now have their own Kubernetes-optimised instances to play with. For eg. AWS provides 3 types of Kubernetes services:</p>  <p> </p> Source: Kubernetes on AWS  <p>In the same way, other leading cloud providers like Google Cloud, Azure and Openstack provide their own version of Kubernetes-focused services. </p> <p>It is natural for any organisation with a robust Cloud infrastructure to have setups with multiple cloud providers and avoid vendor lock-ins. This increases the complexity of handling the Kubernetes cluster setups. It is a genuine pain point in many organisations. There is a need for a common management dashboard to engineer the vast Kubernetes cluster orchestration systems. </p>","title":"The \u201cTaikun\u201d way to save time and money while using Kubernetes"},{"location":"blog/01/#taikun-your-kubernetes-engineer","text":"<p>Taikun is a cloud management tool that helps you create and manage various Kubernetes clusters on all major cloud platforms. It uses CLI API calls of these major providers. Taikun currently supports AWS, Azure and Openstack. </p> <p>AWS and Azure are the top 2 cloud providers in the world, commanding over 50% of the market share in the cloud infrastructure market. Openstack is the leading tool used in private cloud setups and is expected to grow at a CAGR of over 25% every year in the 2021-26 period. </p>  <p> </p> Source: Statista  <p>With comprehensive support for AWS, Azure and Openstack, Taikun is capable of simplifying most of your cloud needs when it comes to container orchestration via Kubernetes. That\u2019s why we call Taikun, your Kubernetes Engineer. </p>","title":"Taikun - Your Kubernetes Engineer"},{"location":"blog/01/#how-taikun-saves-you-time-and-money","text":"<p>Currently, the most common way to handle the increasing complexity in a company\u2019s cloud infrastructure is to hire a strong Cloud team. Not only is it cost heavy, but it also takes a lot of time and coordination between team members to manage the Kubernetes system well. </p> <p>In spite of heavy time and money expenditure, there is always a chance of inefficiencies creeping into the usage of these cloud resources. These inefficiencies cost a lot of money as cloud resources work on a pay-as-you-go model.</p>  <p> </p>   <p>Taikun creates a level of abstraction over this vast variety of Cloud APIs from multiple cloud providers and provides a single dashboard for the management of Kubernetes clusters. It provides capabilities like creation, deployment, management, billing, monitoring, and backup. So it goes beyond dashboards like Graphana which are solely for monitoring and logging. </p> <p>Kubernetes environments in Taikun are fully adjustable with various types of access profiles, Kube configs and Kubernetes versions. User profiles can be set for different members of your team as per our requirements. This saves a huge amount in time and resource costs. Managing Taikun is much simpler and cheaper than having a bunch of trained engineers managing a multi-cloud Kubernetes cluster system.</p>","title":"How Taikun saves you Time and Money"},{"location":"blog/01/#optimized-compute-usage","text":"<p> </p>   <p>AWS billing shock stories aren\u2019t unheard of to anyone working in the cloud domain. A cloud is nothing but taking compute resources on rent and thus it is important to keep an eye on resource usage on the cloud providers. </p> <p>Taikun helps in keeping infrastructure costs under control with its billing tools. One can allocate expenses based on individual project consumption. Billing rules can help eliminate overspending on infrastructure. </p> <p>Taikun\u2019s own pricing is also 100% transparent. As an additional step, there is a dedicated Customer Support Manager for every customer to help with any potential issues. </p>","title":"Optimized compute usage"},{"location":"blog/01/#taikun-use-cases","text":"<p>Let\u2019s take some use-cases to show how Taikun can be a gamechanger for a Kubernetes setup.</p>","title":"Taikun use-cases"},{"location":"blog/01/#startup","text":"<p>A startup needs quick scaling as it grows. Hiring a DevOps team to handle Kubernetes setup is not cost-effective. Taikun can provide an easy-to-use interface with a keen eye on billing while giving all the benefits of using a multi-cloud infrastructure. </p>","title":"*Startup"},{"location":"blog/01/#software-house","text":"<p>A SaaS company will have to manage many customer environments. Integrating Taikun into their CI/CD pipelines can save a lot of time on managing cloud resources through a single pane of glass and providing customers with a nice easy-to-use dashboard.</p>","title":"Software House"},{"location":"blog/01/#enterprise-devops","text":"<p>Enterprise DevOps is complex. It has many moving pieces which make it imperative to have a powerful management dashboard. Taikun can help an IT manager manage their team resources, enforce company policies and enable self-service for internal teams. This can vastly improve work-time effectiveness saving both time and money.   </p>","title":"Enterprise DevOps"},{"location":"blog/01/#enterprise-liftshift","text":"<p>Taikun will help save months of work while moving legacy infra to the cloud. The comprehensive tool can easily deploy Kubernetes and create virtual infrastructure in clouds of our choice. The quick overview dashboard and extensive management features can help teams view current statuses easily and thus help plan the transition better.    </p>","title":"Enterprise Lift&amp;Shift"},{"location":"blog/01/#regional-cloud-provider","text":"<p>For companies that provide cloud services in their region, Taikun can help compete with hyperscalers like AWS and Azure. Taikun can connect the cloud resources and help offer advanced Kubernetes and virtual resources setups to their customers. </p> <p>Taikun features can become a USP for the Regional Cloud Providers by giving their customers features like complete CLI, Terraform Provider or credit card payments etc.</p> <p>Taikun is thus useful in a myriad set of use-cases for all types of companies, right from a small startup to a large Fortune 100 company. </p>  <p>Please contact us to explore our solution in more detail and for a free consultation.</p> <p>If you wish to read more about Taikun and how it works, please refer to our Taikun Landing Page. </p>","title":"Regional Cloud Provider"},{"location":"blog/02/","text":"<p> </p>","title":"2 - Taikun and its orchestration magic"},{"location":"blog/02/#taikun-and-its-orchestration-magic","text":"<p>The top 3 cloud service providers i.e. AWS, Azure and Google Cloud, all provide Kubernetes cluster services. Each Cloud provider has certain advantages over others and is better suited for certain use cases more than others.</p> <p>Amazon Elastic Kubernetes Services (EKS) is the most widely used managed Kubernetes services (as per CNCF report of 2021). It is also least pre-configured, which means there is more control available for use but requires more knowledge to operate the K8s properly. EKS is generally pricier than others. </p> <p>Azure Kubernetes Service (AKS) is often the most cost-effective as Control Plane is free with the offering. The billing is on per node usage. AKS also offers more pre-configured options than AWS\u2019 EKS. </p> <p>Google Kubernetes Engine (GKE) is the most automated of the three. GKE also provides the most options in terms of versions. Since Kubernetes came from the Google stable, most of the latest versions of Kubernetes are supported on GKE. </p> <p>Openstack and Kubernetes are deeply integrated and work together very well. However, setting it up in a private cloud is the most manual of all approaches and requires a good understanding of the systems in play. This manual setup also brings the huge advantage of customizability for the Cloud engineers.</p> <p>Given this wide variety of strengths and weaknesses in each kind of setup, it is natural for any organisation to have multiple cloud providers for their Kubernetes cluster setups. This inevitability also brings in high levels of complexity to manage the clusters systems. </p> <p>Taikun can help solve this problem.</p>","title":"Taikun and its orchestration magic"},{"location":"blog/02/#how-taikun-abstracts-the-complexity","text":"<p>In simple words, Taikun sits on top of the various types of cloud and manages them using API calls provided by these cloud providers. It goes one step further by giving a simple UI for the user to work with. </p> <p>Taikun also gives additional features like better access control, detailed monitoring, logging and alerting capabilities, billing segmentation based on usage by teams and many more. </p> <p>Taikun thus acts as a single pane of glass dashboard for monitoring and your Kubernetes management. Kubernetes environments are fully customizable with various types of access profiles, Kube configs and versions.</p> <p>Taikun also provides options to control your infrastructure costs by setting billing rules to avoid overspending.</p>  <p> </p>","title":"How Taikun abstracts the complexity"},{"location":"blog/02/#magic-of-organization-and-projects-in-taikun","text":"<p>The abstraction over multiple cloud providers is done using the concept of Organization and Projects in Taikun. Taikun allows multiple Projects to be created under a single Organization. Each Project can be of a different Cloud Type like Openstack, AWS etc.</p>  <p> </p>   <p>This allows the user to see how each K8 cluster is doing in their cloud. The dashboard shows an overview of how the entire Organization is doing.</p>  <p> </p> We can have multiple organizations within a single Taikun setup","title":"Magic of Organization and Projects in Taikun"},{"location":"blog/02/#better-access-control","text":"<p>The capabilities of the Cloud teams are further enhanced with better access profiling and control. This also helps control the billing as only certain users can spawn new clusters. </p> <p>Taikun offers three kinds of users on its system - User, Manager and Partner: </p> <ul> <li> <p>A User cannot create new projects but can manage and operate projects. So, a user can create/manage clusters, see the overview of projects, servers or cloud credentials for the organization.</p> </li> <li> <p>A Manager can do everything a user can and some more. A manager can manage users, create projects, add new cloud credentials and set up backups, within an organization. </p> </li> <li> <p>A Partner is a Taikun user with maximum privileges. A partner can have several organizations under his control. A partner can also add new organizations and create new billing rules.</p> </li> </ul> <p>The robust access control features help Taikun\u2019s customers separate roles and responsibilities within a team in a more granular manner. It also helps avoid managing multiple access control policies separately for each cloud setup. </p>","title":"Better access control"},{"location":"blog/02/#consistent-and-predictable-experience","text":"<p>Taikun\u2019s parent Itera is a silver member of CNCF and all the deployments are CNCF certified. This means that every Kubernetes installation created via Taikun will be similar across all cloud platforms. This enables interoperability from one Kubernetes installation to the next and helps the team stay cloud largely vendor-agnostic.</p> <p>CNCF certified Kubernetes installations also mean the latest stable release of Kubernetes will be available for use in the clusters.</p> <p>Taikun, can thus help in orchestration across multiple cloud platforms and provide a common smooth interface to interact with each in a similar and predictable manner. </p>  <p>Please contact us to explore our solution in more detail and for a free consultation.</p> <p>If you wish to read more about Taikun and how it works, please refer to our Taikun Landing Page. </p>","title":"Consistent and predictable experience"},{"location":"blog/03/","text":"<p> </p> Source: Pixabay","title":"3 - A comprehensive guide to operating Kubernetes on Taikun"},{"location":"blog/03/#a-comprehensive-guide-to-operating-kubernetes-on-taikun","text":"<p>In our previous blogs, we saw how Taikun helps you abstract Kubernetes setup and deployments across multiple cloud providers. Taikun also makes it easy for users to manage their Kubernetes setups with its intuitive UI. </p> <p>In this blog, we see how different features in Taikun help in operating a Kubernetes deployment better. </p> <p>We will explore this by looking at some of the common needs that come up while managing a Kubernetes infrastructure, and see how that can be easily done in Taikun.</p>","title":"A comprehensive guide to operating Kubernetes on Taikun"},{"location":"blog/03/#need-1-getting-an-overview-of-the-status-of-infrastructure","text":"<p>One of the key needs for a team managing Kubernetes infrastructure is to have a dashboard that shows the exact status of their Kubernetes setup. Taikun provides a comprehensive view of the entire deployment across all cloud providers through its Dashboard.</p> <p>To view the Dashboard, log in to your Taikun app. Click on the left menu. Dashboard is the first item under the User section.</p>  <p> </p>   <p>The first section of the Dashboard shows an option to choose the organisation from a drop-down list. The next section consists of basic charts that show a quick overview of the setup. For eg., the status of Projects within the Organisation, Server statuses, the status of all nodes and pods etc.</p> <p>The dashboard gives some granular details in the form of tables, like the status of each node and pod in the infrastructure and a summary of all events and alerts within the organisation.</p>  <p> </p>","title":"Need #1: Getting an overview of the status of infrastructure"},{"location":"blog/03/#need-2-backing-up-the-kubernetes-deployment","text":"<p>Backing up of the Kubernetes deployment is important to ensure proper Disaster recovery and prevent Data loss. Backups also help better cluster portability of Kubernetes resources. </p> <p>Taikun uses Velero to backup Kubernetes deployment. Backup can easily be set up in three steps:</p>","title":"Need #2: Backing up the Kubernetes deployment"},{"location":"blog/03/#step-1-add-backup-credentials","text":"<p>The Backup credentials can be added in the Taikun Dashboard, under the Credentials section.</p>  <p> </p>   <p>In order to add new credentials, you need the following information: </p> <ul> <li>Organisation you\u2019ll add credentials to.</li> <li>S3 security details. </li> <li>Projects you want to associate the credentials to.</li> </ul>  <p> </p>   <p>Once the credentials are added, you can add the Associated Projects to which you want to link it.</p> <p>You can read more about backup credentials here.</p>","title":"Step 1: Add Backup credentials."},{"location":"blog/03/#step-2-enable-backup","text":"<p>After configuring the backup credentials and linking them to the relevant Projects, the next step is to enable the backup.</p> <p>The backup can be enabled either during the creation of the project itself or later by going to Projects under the User section from the menu in the Taikun Dashboard.</p> <p>To enable backup, we click on the Project we want to backup. This opens up the list of Servers that are in the project. Enable Backup option is on top of the screen. Once you click on it, it\u2019ll ask for the backup credential to link the Project to. That\u2019s it!</p>  <p> </p>","title":"Step 2: Enable backup."},{"location":"blog/03/#step-3-set-a-backup-policy","text":"<p>Once the backup credentials are created and the backup is enabled for the projects, the last step is to create a backup policy. The Backup policy option will get enabled in the Server list screen once you enable the backup. </p>  <p> </p>   <p>Choose a name for the backup schedule, a retention period i.e. how long the backup must be kept and the cron for scheduling. </p>  <p> </p>   <p>You will then be able to see the status of all backups of that project under the Backup policy.</p>  <p> </p>   <p>You can read more about backup policy here.</p> <p>With these three steps, you can have granular access to operating all backup tasks right within your Taikun Dashboard.</p>","title":"Step 3: Set a backup policy."},{"location":"blog/03/#need-3-view-logs-and-monitor-kubernetes-clusters","text":"<p>Taikun uses Grafana in the back end to help view logs, alerts and other data on its Dashboard. This is done after we enable monitoring for the project.</p> <p>To enable or disable monitoring, simply go to the respective project to see the Server list screen. Toggle the Enable/Disable Monitoring option. Enabling monitoring activates Logs, Alerts and Metrics option for the project. You will be able to see them after 5 minutes of enabling monitoring. </p> <p>You can also enable monitoring during project creation.</p>  <p> </p>   <p>To view logs, click on Logs on the Server list screen and write queries. </p>  <p> </p> Query to view logs is for instance in Taikun suggestor   <p>In the same way, Alerts and Prometheus metrics can be viewed from the Taikun Dashboard. You can read more about logs, alerts and metrics here.</p>","title":"Need #3: View logs and monitor Kubernetes clusters"},{"location":"blog/03/#need-4-notify-alerts-via-communication-channels","text":"<p>Another common need for a Cloud team is to have the ability to get notifications when something fails or a process gets completed. Taikun helps you do this easily via Alerting Profiles. </p> <p>You can access Alerting profiles by going to the Taikun Dashboard menu under the Profiles section. You can add Slack channel, Email, Webhook and integrations with a few apps like Opsgenie, Pagerduty, Splunk and MicrosoftTeams. </p>  <p> </p>   <p>You can read more about Alerting profiles here.</p>","title":"Need #4: Notify alerts via communication channels"},{"location":"blog/03/#need-5-enforce-policies-for-compliance","text":"<p>All production-level Kubernetes setups need policies to be set up to ensure compliance with local laws and regulations. It is also required to ensure consistency between Kubernetes delpoyments and keep them more secure.</p> <p>Taikun allows you to add Policy profiles under the Profiles section in Taikun Dashboard\u2019s menu. Taikun uses OPA to set up these policies.</p>  <p> </p>","title":"Need #5: Enforce Policies for compliance"},{"location":"blog/03/#need-6-access-clusters-via-proxy-servers","text":"<p>Cloud team often requires offline access to the Kubernetes systems. Taikun allows you to set up offline access to the resources. You can add Access profiles under the Profiles section of the Taikun Dashboard menu.</p>  <p> </p>   <p>Once the Access profile is created for an organisation, you can link projects to that access profile.</p>  <p> </p>","title":"Need #6: Access clusters via proxy servers"},{"location":"blog/03/#conclusion","text":"<p>Taikun is a one-stop tool for all your Kubernetes needs. It is a perfect companion to meet every Cloud team\u2019s needs when it comes to Kubernetes.</p>  <p>Please contact us to explore Taikun in more detail and for a free consultation.</p> <p>If you wish to try Taikun and see it in action, try our cloud solution here.</p>","title":"Conclusion"},{"location":"blog/04/","text":"<p> </p> Source Pixabay.com","title":"4 - Taikun\u2019s way to monitor and report metrics of apps and users in Kubernetes"},{"location":"blog/04/#taikuns-way-to-monitor-and-report-metrics-of-apps-and-users-in-kubernetes","text":"<p>Kubernetes makes it extremely easy to dynamically provision infrastructure resources. It provides a set of APIs that can be triggered by teams to build new clusters or replicate old ones. </p> <p>Any large cloud infrastructure would be hosting K8s for multiple tenants (or teams) in the organisation. With APIs to dynamically provision such resources, it can quickly blow up resource consumption and exponentially increase costs. </p> <p>The advantage of an auto-scaling architecture in Kubernetes and the ability to programmatically provision expensive resources like GPU on the cloud can increase the risk of overspending and under-optimizing compute resources.</p> <p>Often, development teams facing deadline pressures, use and forget to destroy unused resources. Memory leak bugs or inefficient code can also easily cause extraordinary consumption of infrastructure resources. </p> <p>It is thus imperative that a cost monitoring solution is put in place. So that each team on the infrastructure knows how much it is consuming from the cloud infrastructure. </p> <p>Like all other aspects of Kubernetes infrastructure management - Taikun can help you with it. Let us see how.</p>","title":"Taikun\u2019s way to monitor and report metrics of apps and users in Kubernetes"},{"location":"blog/04/#taikun-showback-chargeback","text":"<p> </p>   <p>In Taikun, there are two ways in which efficient monitoring and reporting are done for the usage of apps and users - Showback and Chargeback. Let\u2019s first understand how these two are different. </p> <p>We know from our previous blogs that Taikun captures diverse metrics to monitor and report the usage of apps and users. Prometheus metrics can be accessed via queries from the Metrics tab in the Kubernetes server list.</p>  <p> </p>   <p>Showback captures the resource usage by different users and apps within Taikun. Chargeback focuses on the Billing in an Organization. In both of them, rules can be defined to control the usage of compute resources and billing. </p> <p>Let\u2019s see how organisations can use Showback and Chargeback features in Taikun to manage resource usage and, consequently, improve their budget utilization.</p>","title":"Taikun Showback &amp; Chargeback"},{"location":"blog/04/#using-showback-in-taikun","text":"<p>Showback in Taikun can be used to manage the maximum amount of resources that a project can use. The resource can be any Prometheus metric that is captured in the Taikun system.</p>","title":"Using Showback in Taikun"},{"location":"blog/04/#setting-showback-rules","text":"<p>These are defined in the Showback Rules tab under the Manager section. We start by adding a Showback rule to capture and manage that metric. </p>  <p> </p>   <p>We start with choosing the Organization in which we want to set the Showback rule. Some important fields in a Showback rule are as follows: </p> <ul> <li>Name needs to be unique. </li> <li>Metric Name is basically the metric we want to track and manage. </li> <li>Kind is the field where we define where the data is coming from. Taikun gives us the ability to connect external data sources for more metrics. These are defined in another tab called Showback Credentials.</li> <li>Type is the field where we tell Taikun how to count the metric. Is it a SUM like how many GBs were used or is it a COUNT like how many flavors of VMs are deployed. </li> <li>Price field helps mention EURO/USD/CZK per unit of the metric. </li> </ul> <p>Other fields define the Global and Project level limit for the metric and link a Showback credential to it if it is relevant. There is also an option to define our own variables in the form of labels.</p> <p>You can read more about Showback rules here.</p>","title":"Setting Showback rules"},{"location":"blog/04/#adding-showback-credentials","text":"<p>As mentioned earlier, if the metrics need to be collected from an external source - Showback Credential tab under Credentials section is where we define it.</p> <p>It is pretty straightforward. We mark the Organization it is for, give it a Name and the credentials (URL, Username and password). That\u2019s it.</p>  <p> </p>   <p>Read more about Showback credentials here.</p>","title":"Adding Showback credentials"},{"location":"blog/04/#showback-summary","text":"<p>Showback Summary tab under Manager is where all the magic happens. This page shows exactly which Rule is consuming how much of the budget. The page is updated at the beginning of every hour.</p>  <p> </p>   <p>The collected data can be exported as a CSV file. There is also an option to send the report as an email (defined in My Profile tab of the user)</p> <p>More details about Showback summary can be found in Taikun docs.</p>","title":"Showback Summary"},{"location":"blog/04/#chargeback-in-taikun","text":"<p>Chargeback in Taikun is a way to control and manage the compute and infrastructure resources billing in an organisation. This is done by first defining Billing Rules in the Taikun Control Panel. Let\u2019s see how it is done.</p>","title":"Chargeback in Taikun"},{"location":"blog/04/#billing-rules-and-credentials","text":"<p>New budget rule for Organization is added under the Partner &gt; Billing rule. Adding a new rule is straightforward. </p>  <p> </p>   <p>Similar to adding a Showback Rule we discussed above, add the field details and choose the Organisation you want to apply the rule to. You have to also choose the Price Rate between 0% and 100%. </p> <p>If you want to add new external data sources, you can add them under Billing Credential under the Credentials section. The process is similar to Showback credential.</p>","title":"Billing rules and credentials"},{"location":"blog/04/#chargeback","text":"<p>The Chargeback tab under Billing is where all the summary gets saved. The data is shown in a tabular format and can be filtered on time.</p> <p>Export to CSV and share via email option is available for this dashboard as well.</p>  <p> </p>   <p>More about Taikun Chargeback here.</p>","title":"Chargeback"},{"location":"blog/04/#usage-reports","text":"<p>Another kind of report that Taikun provides is a Usage Report. This again can be found under the Billing section in the Taikun Dashboard.</p> <p>A Usage Report in Taikun provides more granular data. With it, you can view how much compute and infrastructure resources have been utilized by each project. </p> <p>The unit of measurement for it is TCU or Taikun Compute Unit. A Taikun Compute Unit is basically no. of CPUs used in the project + GB of RAM used in the project.</p>  <p> </p>   <p>Read the docs to know more about Usage reports in Taikun.</p>","title":"Usage reports"},{"location":"blog/04/#conclusion","text":"<p>Taikun\u2019s Showback and Chargeback features have proven to be a game-changer for many Cloud management applications. With Showback rules and Billing rules in place, teams have become more confident in using autoscaling architecture without the risk of overshooting the company budgets.</p> <p>These features help optimise the infrastructure resources and bring in a sense of accountability within teams using the Kubernetes setup.</p>  <p>Please contact us to explore Taikun in more detail and for a free consultation.</p> <p>If you wish to try Taikun and see it in action, try our cloud solution here. </p>","title":"Conclusion"},{"location":"blog/05/","text":"<p> </p>  Taikun - Your Kubernetes Engineer","title":"5 - How to go from Zero to Production with Kubernetes in under 30 mins"},{"location":"blog/05/#how-to-go-from-zero-to-production-with-kubernetes-in-under-30-mins","text":"<p>Kubernetes has become one of the most critical aspects of any Cloud infrastructure. With such ubiquitousness of Kubernetes, having the ability to create and deploy Kubernetes clusters quickly has become a very important function in the cloud workflow.</p> <p>In the previous blog, we showed you how Taikun could be used to manage your Kubernetes infrastructure efficiently. In this blog, we will show you two ways in which you can use Taikun and go from Zero to production with Kubernetes in under 30 minutes. </p> <p>We first need to understand some of the concepts in Taikun. </p>","title":"How to go from Zero to Production with Kubernetes in under 30 mins"},{"location":"blog/05/#understanding-some-taikun-concepts","text":"","title":"Understanding some Taikun concepts"},{"location":"blog/05/#organization-and-projects","text":"<p>In Taikun, an Organization is the highest level of grouping. There can be many Projects under an Organization. You can add many features to an Organization that gets inherited in the Projects under that Organization.</p> <p>For example, you can add Access profiles, Alerting profiles, Kubernetes profiles etc. </p>","title":"Organization and Projects"},{"location":"blog/05/#user-roles","text":"<p>Taikun has three user roles \u2013 User, Manager and Partner. </p> <p>A Partner role is the one with the most administrative privileges. A Partner can create multiple organisations and has the ability to create other features for an organisation.</p> <p>A Manager role has administrative privileges over projects under an organisation. A user role in Taikun is mostly for execution. </p>","title":"User roles"},{"location":"blog/05/#zero-to-production-in-30-mins","text":"<p>With those Taikun concepts in mind, let\u2019s see how we can get a Production-grade Kubernetes cluster in 30 mins.</p> <p>There are essentially two methods in which you can deploy your Kubernetes infrastructure quickly in Taikun - UI method and Terraform methods.</p>","title":"Zero to Production in 30 mins"},{"location":"blog/05/#ui-method","text":"<p>You need to be of a Manager or Partner role to execute most of the below activities.</p>","title":"UI method"},{"location":"blog/05/#step-1-login-to-taikun-and-connect-your-cloud","text":"<p> </p>   <p>The first step towards creating your own Kubernetes cluster using Taikun is to create a login in Taikun. You can also use Keycloak if it is set within your organization.</p> <p>After you login to the Taikun dashboard, you have to first authorise Taikun to access your cloud infrastructure. This is done by adding Cloud credentials to the Taikun Dashboard.</p> <p>Taikun can currently link to your Open Stack, AWS and Azure and Google Cloud setups. Detailed steps on how to connect to these cloud infrastructures are given in Taikun Documentation.</p>  <p> </p>   <p>Once you have linked your cloud infrastructure to Taikun, the next step is to start creating profiles for the Organization.</p>","title":"Step 1: Login To Taikun and connect your cloud"},{"location":"blog/05/#step-2-create-profiles","text":"<p> </p>   <p>Before creating a project, you need to have the profiles that you would like the project to inherit. </p> <p>Create the Kubernetes profiles, Access profiles and Alerting profiles that you would need in different projects of the Organization. Later while creating the projects, we would link these profiles to them. </p> <p>Kubernetes profiles basically define the characteristics of your cluster. You can read all about Kubernetes profiles in the Taikun Documentation.</p> <p>Access profiles are needed to connect to the clusters offline. Access profiles are described in the Taikun Documentation.</p> <p>Alerting profiles help you receive notifications when there is an alert in your project. Read more about Alerting profiles in the Taikun Documentation.</p>","title":"Step 2: Create profiles"},{"location":"blog/05/#step-3-create-a-project","text":"<p> </p>   <p>Now you are ready to create your Kubernetes infrastructure. The first step is to create a Project that will hold all the clusters.</p> <p>Go to Projects under the User section and click on \u201cAdd project\u201d button in the top right corner. Add the info and link the profiles as per your requirements. </p> <p>You also attach flavors that are allowed to be created within the project. For eg., you may feel, as a Manager or Partner, that the project only needs an n0.medium or an n0.xsmall flavor.  Finally, you need to attach users to the project. Only these users will be able to operate on this project.</p> <p>The detailed steps are there in the Taikun Documentation.</p>","title":"Step 3: Create a project"},{"location":"blog/05/#step-4-creating-a-cluster","text":"<p> </p>   <p>As you would know, a working Kubernetes cluster requires at least 1 Bastion, 2 Kubemaster and 1 Kubeworker. Any user/manager/partner associated with the project can now create these servers. </p> <p>Start adding the servers you need by clicking the \u201cAdd Server\u201d button on the top-right corner. Once you have created the entire cluster, go to the Actions drop-down menu and click commit. </p> <p>Once the servers are live, a status in Green will show the text \u201cReady\u201d under the server status. Taikun Documentation share more details on it.</p>","title":"Step 4: Creating a Cluster"},{"location":"blog/05/#step-5-configuring-a-project","text":"<p>The last step is to configure the cluster to manage it remotely. </p>  <p> </p>   <p>Go to Projects and click on Kubeconfig to define the configuration for the project clusters. </p> <p>There are also other options to manage projects better. For eg, you can setup automatic backup feature for your clusters. Enabling monitoring will help you debug your clusters better and you can also lock (or unlock) access to different projects if needed.</p> <p>All details on configuring your infrastructure is here.</p> <p>And that\u2019s it! In 30 mins or less, you can build a production-grade Kubernetes infrastructure just by using the Taikun dashboard. Let us now see the other way to do the same. </p> <p>This time, using an infrastructure-as-a-code tool, Terraform.</p>","title":"Step 5: Configuring a project"},{"location":"blog/05/#terraform-method","text":"<p>Terraform lets you define Kubernetes resources in human-readable configuration files (.tf files). Taikun has a Terraform provider that helps you manage resources in Taikun using Terraform. The complete documentation on Taikun\u2019s Terraform Provider is on Terraform registry docs.</p>","title":"Terraform method"},{"location":"blog/05/#step-1-setup-your-environment","text":"<p>You need to have Terraform, Git and Docker set up to run the config files. As you would know, in Terraform all the infrastructure is written as human-readable configuration files in a folder. </p> <p>The main.tf, as is the convention, contains the Provider configuration.</p> <pre><code># main.tf\nterraform {\n  required_providers {\n    taikun = {\n      source = \"itera-io/taikun\"\n      version = \"1.2.0\"\n    }\n  }\n}\n\nprovider \"taikun\" {\n  email    = var.taikun_email\n  passwoed = var.taikun_password\n}\n</code></pre> <p>The init command will initialise Terraform for the infrastructure code.</p> <pre><code>terraform init \n</code></pre> <p>Let\u2019s see how the infrastructure config files would look.</p>","title":"Step 1: Setup your environment"},{"location":"blog/05/#step-2-create-organisation","text":"<p>The config code for an Organisation is straightforward. Just put this in any .tf file:</p> <pre><code>resources \"taikun_organization\" \"myorg\" {\n  name          = \"&lt;name&gt;\"\n  full_name     = \"&lt;full-name&gt;\"\n  discount_rate = 120\n</code></pre> <p>The below command will create the organisation \u201cname\u201d with the label \u201cmyorg\u201d.</p> <pre><code>terraform apply\n</code></pre>","title":"Step 2: Create Organisation"},{"location":"blog/05/#step-3-create-profiles","text":"<p>Profiles like Kubernetes profile, Access profile and Alerting profile can then be defined.</p> <p>A sample config for setting Kubernetes profile would look as follows:</p> <p><pre><code>resource \"taikun_kubernetes_profile\" \"foo\" {\n  name = \"foo\"\n\n  organization_id         = \"42\"\n  load_balancing_solution = \"Taikun\"\n  bastion_proxy           = true\n  schedule_on_master      = false\n  lock                    = true\n}\n</code></pre> The schema for the Kubernetes profile and other profiles are given in the Terraform registry docs.</p>","title":"Step 3: Create Profiles"},{"location":"blog/05/#step-4-create-users","text":"<p>To create users, the variables are first defined in a .tf file and then the variables are defined in a .tfvars file.</p> <p>For example, you could create a users.tf to define the access details of a user. It could look something like this:</p> <p><pre><code>variable \"user\" {\n  type = map(object({\n    email = string\n    role  = string\n  }))\n  description = \"List of project users\"\n  default      {}\n}\n</code></pre> Then another file called tfvars file can be used to declare the users. A sample code for users Alice and Bob would look like this:</p> <pre><code>users = {\n  \"alice\" = {\n    email = \"alice@gmail.com\"\n    role  = \"Manager\"\n  }\n  \"bob\" = {\n    email = \"bob@gmail.com\"\n    role  = \"User\"\n  },\n}\n</code></pre> <p>You can read more about schema for taikun_access_profile here.</p>","title":"Step 4: Create Users"},{"location":"blog/05/#step-4-create-the-infrastructure","text":"<p>To create a project resource, you would need to start with declaring the flavors that will bound to the project. </p> <p>That is done by declaring a flavor data source as follows: </p> <pre><code>data \"taikun_flavors\" \"small\" {\n  cloud_credential_id = resource.taikun_cloud_credential_openstack.foo.id\n  min_cpu             = 2\n  max_cpu             = 8\n}\n</code></pre> <p>Then use a local value called flavors to point to the list of flavors in the above data source. </p> <pre><code>locals {\n  flavors = [for flavor in data.taikun_flavors.small.flavors : flavor.name]\n}\n</code></pre> <p>Now the ground is set to declare a Kubernetes project and spin the clusters.</p> <pre><code>resource \"taikun_project\" \"foobar\" {\n  name                = \"foobar\"\n  cloud_credential_id = resource.taikun_cloud_credential_openstack.foo.id\n\n  access_profile_id     = resource.taikun_access_profile.foo.id\n  alerting_profile_id   = resource.taikun_alerting_profile.foo.id\n  kubernetes_profile_id = resource.taikun_kubernetes_profile.foo.id\n  policy_profile_id     = resource.taikun_policy_profile.foo.id\n\n  expiration_date = \"21/12/2012\"\n  auto_upgrade    = true\n  monitoring      = true\n\n  quota_cpu_units = 64\n  quota_disk_size = 1024\n  quota_ram_size  = 256\n\n  flavors = local.flavors\n\n  vm {\n    name        = \"b\"\n    volume_size = 30\n\n    flavor   = local.flavors[0]\n\n    cloud_init            = \"\"\n    standalone_profile_id = resource.taikun_standalone_profile.foo.id\n    public_ip             = true\n\n    volume_type = \"ssd-2000iops\"\n\n    tag {\n      key   = \"key\"\n      value = \"value\"\n    }\n\n    disk {\n      name        = \"name\"\n      size        = 30\n      volume_type = \"ssd-2000iops\"\n\n    }\n  }\n\n  server_bastion {\n    name   = \"b\"\n    flavor = local.flavors[0]\n  }\n  server_kubemaster {\n    name   = \"m\"\n    flavor = local.flavors[0]\n  }\n  server_kubeworker {\n    name      = \"w\"\n    flavor    = local.flavors[0]\n    disk_size = 30\n  }\n}\n</code></pre> <p>That\u2019s it. The \u201cterraform apply\u201d command will apply the config and create the clusters. You can read more about creating projects using Taikun\u2019s Terraform Provider here.</p> <p>The detailed documentation for this method with live example code can be accessed here.</p>","title":"Step 4: Create the infrastructure"},{"location":"blog/05/#taikun-your-kubernetes-engineer","text":"<p>The ability to quickly create and deploy and manage Kubernetes clusters has been a huge shot in the arm for cloud management. </p> <p>As you see with Taikun, your focus shifts from \u201cHow to create\u201d to \u201cWhat to create\u201d when it comes to Kubernetes clusters. Taikun, truly, is your Kubernetes Engineer.</p>  <p>Please contact us to explore Taikun in more detail and for a free consultation.</p> <p>If you wish to try Taikun and see it in action, try our cloud solution here.</p>","title":"Taikun - Your Kubernetes Engineer"},{"location":"dictionary/from-a-to-z/","text":"<p>Access Profile - a profile using http proxy, ssh (we support RSA, ECDSA or Ed25519), dns or ntp to access your cluster, the condition is that you add it to the project during creation.</p> <p>Alerting Profile - a profile attached to project gives you notifications about alerts in your project.</p> <p>Audit Log - summary of changes made in projects.</p> <p>Backup credentials - Taikun is uses AWS S3 backup. S3 (Simple Storage Service) Backup is a desktop application using Amazon\u2019s infrastructure for remote backups and secure online file storage. It features very strong encryption, compression, easy access to your backed up files and backup scheduling built in.</p> <p>Backup policy - defines the ground rules for planning, executing and validating backups and includes specific activities to ensure that critical data is backed up to secure storage media located in a secure location.</p> <ul> <li>schedules=policies</li> <li>backups=a copy created based on policy</li> <li>restores=a copy from backup data</li> </ul> <p>Billing Rules - rules for Chargeback. Every rule is based on external source, metrics and price.</p> <p>Chargeback - external billing set by Billing Rules, you can see the price for every rule for selected time period.</p> <p>Cloud - a global network of servers, each with a unique function. These servers are designed to either store and manage data, run applications, or deliver content or a service such as streaming videos, web mail, office productivity software, or social media. Cloud operates as a single ecosystem.</p> <ul> <li>Taikun is now supporting OpenStack, AWS, Azure and we are planning to support GCP as well.</li> </ul> <p>Cluster = project - a set of computers hat work together so that they can be viewed as a single system</p> <ul> <li>Kubernetes cluster - a set of nodes that run containerized applications. Containerizing applications packages an app with its dependencies and some necessary services. They are more lightweight and flexible than virtual machines. In this way, Kubernetes clusters allow for applications to be more easily developed, moved and managed. </li> </ul> <p>CNI - Container Network Interface, consists of a specification and libraries for writing plugins to configure network interfaces in Linux containers, along with a number of supported plugins. CNI</p> <p>Credentials - data confirming the identity of the user or external application (e.g. the user name and password, user name and API key, or authentication token that the identity service provide). In Taikun you can find Cloud Credentials, Backup Credentials, Billing Credentials and Showback Credentials.</p> <p>CSM - Customer Success Manager</p> <p>Endpoint - a remote computing device that communicates back and forth with a network to which it is connected (usually URL address).</p> <p>Flavor - is an available hardware configuration for a server. Defines the compute, memory, and storage capacity of nova computing instances</p> <p>Floating IP - a kind of virtual IP address that can be dynamically routed to any server in the same network. Multiple servers can own the same Floating IP address, but it can only be active on one server at any given time.</p> <p>Import network - use the network already created in cloud (works for OpenStack)</p> <p>Keycloak - an open source software product to allow single sign-on with Identity and Access Management aimed at modern applications and services. Keycloak</p> <p>Kubeconfig file - a file used to configure access to Kubernetes when used in conjunction with the kubectl commandline tool (or other clients). Kubeconfig</p> <p>Kubernetes - a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. Kubernetes </p> <p>Kubernetes Profile - a profile for enabling kubernetes function and features (such as Octavia, Load Balancer or Proxy on bastion)</p> <p>Load Balancer -  refers to the process of distributing a set of tasks over a set of resources (computing units), with the aim of making their overall processing more efficient. Load balancing can optimize the response time and avoid unevenly overloading some compute nodes while other compute nodes are left idle.</p> <p>Metrics - measure specific characteristics in a countable manner. Metrics are used in monitoring and billing.</p> <p>Monitoring - is the process to gather metrics about the operations, to ensure everything functions as expected to support applications and services. By enabling monitoring you can see Logs, Alerts or Metrics.</p> <p>Node - a worker machine in Kubernetes and may be either a virtual or a physical machine, depending on the cluster. Nodes</p> <p>Octavia - exposes the Service externally using the load balancers from OpenStack.</p> <p>Pod - the smallest execution unit in Kubernetes. A pod encapsulates one or more applications. Pods</p> <p>Project = cluster - a set of computers hat work together so that they can be viewed as a single system</p> <ul> <li>Kubernetes cluster - a set of nodes that run containerized applications. Containerizing applications packages an app with its dependences and some necessary services. They are more lightweight and flexible than virtual machines. In this way, Kubernetes clusters allow for applications to be more easily developed, moved and managed. </li> </ul> <p>Proxy on Bastion - exposes the Service on each Node's IP at a static port, the NodePort. You'll be able to contact the NodePort Service, from outside the cluster, by requesting NodeIP:NodePort.</p> <p>Reboot - to reload the operating system of a computer: to start it up again.</p> <ul> <li>HARD - the power to the system is physically turned off and back again causing an initial boot</li> <li>SOFT - system restarts without the need to interrupt the power</li> </ul> <p>Role - defines the rights and permissions granted to user accounts. In Taikun there are User, Manager (Owner) or Partner. You can take a look at each role in User Guide.</p> <p>Showback - internal billing set by Showback Rules, you can see the price for every rule for selected time period. You can also set external source for billing.</p> <p>Showback Rules - rules for Showback. Every rule is based on metrics and price.</p> <p>Subscription - an amount of money that you pay regularly to use Taikun. Price is various depending on the number of users, projects or TCU.</p> <p>Token - an alphanumeric text string that provides access to APIs and resources.</p> <p>User - digital representation of a person using Taikun. Each user is defined by username (e-mail) and the access is granted by token. User has assigned role with its permissions.</p> <p>Webhook - way web applications can communicate with each other, allows you to send real-time data from one application to another whenever a given event occurs.</p>","title":"From A to Z"},{"location":"tech/tech/","text":"<p>New posts comming soon</p>","title":"Tech"},{"location":"use_cases/","text":"<p>Taikun Use Cases presents specific high level problems and outlines possible solutions.</p>","title":"Taikun Use Cases"},{"location":"use_cases/01/","text":"<p> </p>","title":"1 - How Taikun can help Startups scale fast and cheap"},{"location":"use_cases/01/#how-taikun-can-help-startups-scale-fast-and-cheap","text":"<p>A fast-growing startup has two priorities - time and money. They need to get the maximum done in minimum time and minimum expense. Taikun fits that bill perfectly when it comes to scaling Kubernetes infrastructure. </p> <p>When a startup thinks of setting up a cloud infrastructure, capital costs are one of the key concerns. The cost is not only for the cloud resources leased but also for the experts hired to manage it, the inefficiencies that inevitably creep in and many more. </p> <p>Kubernetes is the ubiquitous container orchestration tool popular on all kinds of cloud setups. It is the tool that most companies use to provide software services from the cloud. Its inherent load-balancing features, scaling capabilities, and stable deployment techniques make it the perfect choice for any SaaS offering. </p> <p>If a startup can find a way to manage to optimise and even reduce its expenses on provisioning and managing the Kubernetes clusters - it can dramatically bring down their IT costs. </p>","title":"How Taikun can help Startups scale fast and cheap"},{"location":"use_cases/01/#complexities-of-cloud","text":"<p>Today, we have an incredible amount of choices when it comes to cloud offerings. With so many choices of providers and types of cloud, it is easy to get lost and overwhelmed by the complexity.</p> <p>With startups, the complexity increases even more. </p> <p>They must be able to quickly change course and scale big. There is also a need to experiment with different providers. There is also a need to use a multi-cloud environment to make the best use of cloud capability offerings. This begets a need for a central cluster management console. The lack of such a centralised dashboard to manage all their cloud infrastructure further limits their ability to control costs. </p>","title":"Complexities of Cloud"},{"location":"use_cases/01/#taikun","text":"<p> </p>   <p>Taikun is a Kubernetes management tool that you can use to create, manage and delete all Kubernetes clusters in your organisation. We also provide Cloud Automation as a Service via our portal taikun.cloud.</p> <p>With over 10 years of experience in DevOps, we understand cloud automation better than most others. Taikun does not require startups to hire a bunch of cloud experts to manage. It saves money by saving up to 90% of DevOps time. With better resource management, it has proven to reduce infrastructure costs by 40%. </p>","title":"Taikun"},{"location":"use_cases/01/#9-taikun-features-startups-cant-live-without","text":"<p>Let\u2019s talk about 9 features in Taikun that have been game-changers for many startups. </p>","title":"9 Taikun features startups can\u2019t live without"},{"location":"use_cases/01/#1-easy-cloud-k8s-and-vm-deployment","text":"<p>Taikun makes it very easy to deploy new k8s or VMs into the cloud. So startups can choose the cloud provider of their preference and create new machines in a few easy steps. Taikun currently supports Google Cloud, AWS, Azure and OpenStack. </p> <p>Taikun provides a level of abstraction that makes it easy for even novice cloud users to deploy k8s and VMs. Many startups save a lot of money with this right away. With Taikun, their team sizes are much leaner and more effective.</p>  <p> </p>","title":"1. Easy cloud k8s and VM deployment"},{"location":"use_cases/01/#2-backup-capabilities","text":"<p>During the early stages of a startup, even one major disaster can prove fatal. So, they need a robust disaster management setup to save crucial Kubernetes infrastructure and avoid data loss. Taikun provides this backup facility out-of-the-box using Velero. </p> <p>Startups can easily configure backups and create policies to further manage their backups. These are proven life-savers. With Taikun\u2019s easy and efficient backup management, startups also save on backup costs.</p>  <p> </p>","title":"2. Backup capabilities"},{"location":"use_cases/01/#3-monitoring-capabilities","text":"<p>Efficient monitoring capability can prevent many crises in a startup. Taikun does exactly that for your Kubernetes infrastructure. Taikun uses Grafana and Prometheus in the backend to capture and present logs in a more human-readable format. </p>  <p> </p>   <p>Taikun also allows enabling and disabling the monitoring from the dashboard. This can help save precious storage space in the cloud.</p>  <p> </p>","title":"3. Monitoring capabilities"},{"location":"use_cases/01/#4-alert-management","text":"<p>Startups experiment. With experimentation, comes a lot of changes to the infrastructures and varying points of failure. We understand that. So, we built a world-class alert management system for your cloud infrastructure. </p> <p>You can easily configure Taikun to get notified on the medium of your choice when something fails or a process gets completed. </p> <p>With Alerting profiles, you can add Slack channel, Email, Webhooks and integrations with a few apps like Opsgenie, Pagerduty, Splunk and MicrosoftTeams. </p>  <p> </p>","title":"4. Alert management"},{"location":"use_cases/01/#5-events-feature","text":"<p>Many startups in their early stages may not have separate cloud teams. There would be some technical person who doubles as a Cloud engineer. So, Taikun provides a summarised colour-coded view of the logs called as Events view. This helps the user to get a quick overview of what\u2019s happening with their infrastructure. </p> <p>There is also the option to view more details of it. </p>  <p> </p>","title":"5. Events feature"},{"location":"use_cases/01/#6-user-management","text":"<p>Another key need that Taikun fulfils for startups is robust user management. Taikun provides exceptionally granular level of access control over all the users that get created on the system. </p> <p>Taikun offers three types of users to control accessibility - User, Manager and Partner.</p> <p>With these roles and other options, you can control which projects users get access to and what they can change. Such a strong user management feature helps a lot of startups ensure their cloud resources are utilised properly and rarely wasted.</p>","title":"6. User management"},{"location":"use_cases/01/#7-kubeconfig-management","text":"<p>Kubeconfigs are a very quick and effective way to organise information about clusters, users, namespaces, and authentication mechanisms. Taikun provides the ability to not only create new kubeconfigs but also have a common dashboard to view and manage all such kubeconfigs. </p>  <p> </p>","title":"7. Kubeconfig management"},{"location":"use_cases/01/#8-upgrade-feature","text":"<p>Many startups want their Kubernetes to stay up to date with security patches and other bug fixes. Taikun provides an easy way to do it. Every project gives an auto-upgrade option to the user. </p> <p>You can also choose to manually upgrade when you feel ready. </p>","title":"8. Upgrade feature"},{"location":"use_cases/01/#9-repair-feature","text":"<p>It is common to have failures of pods or clusters in a large infrastructure. Startups often do not have a large team of cloud experts to come and troubleshoot their system. Taikun provides a basic level of troubleshooting mechanism within the dashboard. </p> <p>If any of the servers show failed status or there is some other problem in the cluster, go to the project servers and click on the Repair button. Sometimes these small fixes can save a substantial amount of valuable time and money for startups.</p>  <p> </p>   <p>Running IT operations in startups is difficult. Taikun can take some of that workload off your back by helping you handle your cloud operations more efficiently and easily.</p>  <p>Please contact us to explore Taikun in more detail and for a free consultation.</p> <p>If you wish to try Taikun and see it in action, try our cloud solution here.</p>","title":"9. Repair feature"},{"location":"use_cases/02/","text":"<p>SaaS companies are everywhere. Providing software services via the cloud provides incredible agility for the customers of SaaS products. This makes it an extremely attractive proposition for the customers of these software houses. From the perspective of the software houses, the main challenge is to optimize their cloud operations that serve these clients. </p> <p>The more optimized the cloud operations, the better the cost management for the software house and the customers. Better cloud management is a win-win for everyone. Taikun is a Cloud Automation system that software houses can set up on their infrastructure.</p>","title":"How Taikun can help a software house streamline its cloud operations"},{"location":"use_cases/02/#the-cloud-conundrum","text":"<p>A typical SaaS company has a common problem facing them every day. We call it the Cloud conundrum. </p> <p>A large portion of the operational expense of the company is the usage of the cloud to serve its customers. The complexity increases many folds as the number of tenants increase and the cloud moves to a multi-cloud environment. This increases the need for a Cloud management software. The company also needs a software that can smoothly integrate with its CI/CD pipeline. </p> <p>Taikun can play this role exceptionally well and do much more.</p>  <p> </p> Taikun dashboard  <p>Taikun can help manage customer environments very easily. You can manage customer environments as projects or as separate organisations. The robust access control in Taikun can help manage the users on the clients\u2019 side, and provide granular access to different functionalities. </p> <p>The easy management UI with Grafana in the backend helps create a single pane of glass monitoring for the cloud service across environments for the SaaS company. The intuitive interface also reduces the number of cloud experts the company needs on call to monitor the complex cloud infrastructure. This further reduces the operational expenses for the software house. </p>  <p> </p> Taikun - Cloud manager for SaaS companies  <p>Let\u2019s look at few of the exceptionally useful features in Taikun that makes it perfect for a software house to streamline its cloud operations:</p>","title":"The Cloud conundrum"},{"location":"use_cases/02/#taikun-features-perfect-for-saas-companies","text":"","title":"Taikun features perfect for SaaS companies"},{"location":"use_cases/02/#1-multi-tenancy","text":"<p>Taikun\u2019s inherently made to operate well in multi-organisation, multi-project and multi-cloud setups. This makes it perfect to onboard multiple tenants on a SaaS cloud setup. </p> <p>All cloud setups in Taikun are linked to a Project and all projects are part of any Organization. Taikun allows admin users (called partners) to assign resources to projects.</p> <p>Each project can have a type of cloud to manage. So for a Saas firm, if there is a certain kind of tenant which needs to be on-boarded on AWS while another on Google cloud - it is easily possible with Taikun. </p> <p>We can also have multiple organizations within a single Taikun setup.</p>  <p> </p>","title":"1: Multi-tenancy"},{"location":"use_cases/02/#2-multi-cloud-environment-support","text":"<p>Taikun has in-built support for the most popular public and private cloud companies. Currently it supports AWS, Azure, Google Cloud and OpenStack. </p> <p>The best part is that with Taikun, it is very easy for its users to spawn clusters and instances, once the credentials are added to the system. </p> <p>Once the cloud credentials are added to the system, the only thing any client has to focus on is access control and setting policies for its users. Taikun takes care of the rest of it.</p>  <p> </p> One time setup to add cloud credentials","title":"2: Multi-cloud environment support"},{"location":"use_cases/02/#3-single-pane-of-glass","text":"<p>Taikun has a robust monitoring and alerting mechanism. It provides a comprehensive dashboard where one can view all the necessary details of any project. There are multiple levels of abstraction to serve all kinds of purposes. </p> <p>For example, the Dashboard tab on the main page provides the highest level of overview of the entire Organization. The project tab takes it one step down by showing how the individual pods and instances are doing.</p>  <p> </p>   <p>There is more granularity available when you Enable monitoring for a project.</p>  <p> </p>   <p>You even look into logs from the Taikun UI using Prometheus queries.</p>","title":"3: Single pane of glass"},{"location":"use_cases/02/#4-showback-and-chargeback","text":"<p>Taikun also has Showback and Chargeback features to control and measure the number of resources consumed in each project. </p> <p>Showback captures the metrics of resource usage by different users in Taikun. Chargeback focuses on the billing within an Organization. So, the SaaS company can control how much a customer spends and how many resources can it use. </p> <p>These are defined by rules which help control the usage. </p>  <p> </p> Example of Showback summary","title":"4: Showback and Chargeback"},{"location":"use_cases/02/#5-taikun-terraform-provider","text":"<p>Most SaaS companies want to automate their Cloud management and deployment through their CI/CD pipeline. Terraform is a popular method of that. Taikun has excellent integration with Terraform. </p> <p>You can define your Kubernetes resources in terraform files (.tf files). Taikun has a Terraform provider that can read these configuration files and then manage the cloud resources accordingly.</p> <p>This method can help these SaaS companies to code the cloud deployment and management largely. The developer team can thus make cloud changes by editing configuration files and let Taikun take care fo the rest.</p> <p>You can read more about Taikun Terraform provider here.</p> <pre><code># main.tf\nterraform {\n  required_providers {\n    taikun = {\n      source = \"itera-io/taikun\"\n      version = \"1.2.0\"\n    }\n  }\n}\n\nprovider \"taikun\" {\n  email    = var.taikun_mail\n  password = var.taikun_password\n}\n</code></pre>  <p> </p> Sample Terraform file Taikun","title":"5: Taikun Terraform provider"},{"location":"use_cases/02/#conclusion","text":"<p>These features are just some of the ways in which software companies are able to leverage Taikun capabilities and save time and money. Taikun has been a gamechanger for many software houses. </p>  <p>If you would like to see how Taikun can help streamline your cloud operations, please reach out to us here.</p>","title":"Conclusion"},{"location":"use_cases/03/","text":"<p> </p>","title":"3 - Taikun-A Swiss knife in Enterprise DevOps"},{"location":"use_cases/03/#taikun-a-swiss-knife-in-enterprise-devops","text":"<p>Enterprise DevOps is taking over everywhere. The delivery processes are getting automated and the role of Cloud in Enterprise DevOps is on the rise. One of the key issues that come with this setup is cloud management. </p> <p>Enterprise DevOps will almost always involve multiple public and private cloud providers. There will be multiple teams accessing it in different ways. Without a standard policy and controls, it is easy for the DevOps system to become inefficient and wasteful. But the wastefulness and inefficiency are not only how cloud resources are used but also how the DevOps team\u2019s time and energy are utilized. </p>","title":"Taikun - A Swiss knife in Enterprise DevOps"},{"location":"use_cases/03/#many-challenges-one-solution","text":"<p>A common example of it can be a Kubernetes cluster deployment. Multiple teams require different levels of Container Orchestration based on their requirements. One way of catering to these demands is that the teams reach out to the DevOps team for each request. Then the DevOps team spins up a cluster for deployment. This is safe but very inefficient and defeats the purpose of DevOps. </p> <p>A better solution is for the teams to be able to create, manage and destroy the clusters themselves. But this is easier said than done. For teams to do this well, they need to understand how to use the public cloud providers like AWS, Azure and Google Cloud. There is also an added complexity of understanding Kubernetes well. </p> <p>The teams may have different levels of understanding of cloud management. Then there are issues like controlling access, limiting the expense by setting a budget and so on. </p> <p>TAIKUN helps abstract all these aspects and more and can simplify your Kubernetes usage in the company. Taikun has proven to save up to 90% of the DevOps time and cut infrastructure costs by up to 40%. </p>","title":"Many challenges, one solution"},{"location":"use_cases/03/#enterprise-devops-with-taikun","text":"<p>Let\u2019s try and understand how Taikun can transform your Enterprise DevOps game. </p>","title":"Enterprise DevOps with Taikun"},{"location":"use_cases/03/#logical-segregation-of-clusters","text":"<p>Taikun does neat segregation of the clusters by diving them into Organization and Projects.</p>","title":"Logical segregation of clusters"},{"location":"use_cases/03/#organization","text":"<p>An Organization in Taikun is a logical group of all clusters across all cloud providers being used for a particular purpose. Some may create one organization for a team, a project or a department. Others may choose to have just one Organization for the entire company.</p>","title":"Organization"},{"location":"use_cases/03/#projects","text":"<p>A Project in Taikun is a cluster from one cloud provider. Most teams in Enterprise DevOps will have multiple Taikun projects to work with. All Projects fall within an Organization.</p>","title":"Projects"},{"location":"use_cases/03/#user-roles","text":"<p>Taikun has three user roles - Partners, Managers and Users. </p> <p>Partners are like super admin users in Linux systems. It is a role with the highest privileges and has all the admin control in the Taikun system. Partners can manage multiple Organizations within the Taikun system. They can also create, manage or delete the policies and controls for each Organization and Project. </p> <p>A manager manages everything within an Organization. So it is a level below a Partner in the Taikun system. All controls related to a project are available for the Manager.</p> <p>User is a role with the lowest privileges in the Taikun system. Most users in a company will be assigned a user role.</p> <p>One of the ways a DevOps team can help streamline the privileges in the company is by giving IT managers or Product Managers a Manager role in Taikun. While everyone else can be on-boarded as a User in Taikun.</p> <p>The DevOps team themselves can keep a Partner role to have all the necessary controls to the Taikun system.</p>  <p> </p> A Partner managing Organizations within the Taikun system  <p>This sample role distribution not only limits the control each user in the company has on the cloud setup but also, helps create a logical grouping of the cloud clusters for different projects in the company.</p> <p>Almost anything you can think of to do with your K8 clusters can be done within the Taikun dashboard itself. Let us now see how company-wide automation of checks, policies and controls can be put in place with Taikun. </p>","title":"User roles"},{"location":"use_cases/03/#no1-segment-and-control-resources","text":"<p> </p>   <p>Projects in Taikun give ways to control the type and amount of cloud resources that can be assigned to it. One project in Taikun gets associated with a type of cloud setup like AWS or Openstack etc. </p> <p>Managers can define the flavour of instances that a project can have and then Users of the project can only create those instances in the project. </p>  <p> </p>   <p>Managers or Partners can go to Flavor Info, choose a flavour and \u201cBind to Project\u201d to let users create those instances within the project.</p>","title":"No.1 Segment and Control resources"},{"location":"use_cases/03/#no2-enforce-company-policies","text":"<p>One of the key challenges in any Cloud Management is to make sure company policies are followed in the cloud. These could be Backup policies, Access policies and many other kinds of internal controls. </p> <p>Taikun makes it easy for DevOps teams to set such policies. For example, Managers can set backup policies for projects. This works across cloud providers and is very useful esp. in compliance.</p>  <p> </p>   <p>Similarly, Taikun allows Managers and Partners to easily configure how users can access the clusters. </p>  <p> </p>   <p>Furthermore, you can set policy profiles, create all company policies, and bind them to all projects. This will make all projects in Taikun compliant with internal and external policies.</p>  <p> </p>","title":"No.2 Enforce company policies"},{"location":"use_cases/03/#no3-easy-monitoring-and-troubleshooting","text":"<p>Every DevOps team needs easy monitoring and troubleshooting method for their cloud setup. Many enterprises use tools like Graphana and Prometheus to create a single pane of glass for their cloud infrastructure. </p> <p>Taikun does this out of the box. Taikun uses Graphana and Prometheus to provide an easy way for teams to monitor their cloud and go through logs to troubleshoot quickly. The tool can also allow you to search through the logs by writing Prometheus queries.</p>  <p> </p> Viewing logs in Taikun  <p>Besides this, Taikun provides DevOps teams ways to get alerted quickly via notification channels of their choice. This can be Slack channels, email or other common communication mediums.</p>  <p> </p>","title":"No.3 Easy monitoring and troubleshooting"},{"location":"use_cases/03/#no4-control-resource-spend","text":"<p>Another common issue that DevOps teams face during cloud management is controlling the amount of cloud resources users create and use. Billing and resource management can be critical to Project Managers to protect their budgets from going out of hand. </p> <p>Showback and Chargeback features of Taikun are perfect to control these aspects of Cloud management. With these features, managers can control the extent of cloud resources a project uses and limit them from using it further. </p> <p>Showback summary in the Taikun dashboard shows how much of the budget is already used for each rule set up by the DevOps team. The advantage of such a rule-wise summary is that it allows DevOps to view the same resource consumption in different ways. </p>  <p> </p>   <p>Chargeback takes this a step further and shows how much of the budget was consumed in what time period by the rules defined by the DevOps team.</p>  <p> </p>","title":"No.4 Control resource spend"},{"location":"use_cases/03/#swiss-knife-for-your-devops","text":"<p>As the above utilities suggest, Taikun can become the Swiss knife of your Enterprise DevOps team. Entire cloud automation and management across all major cloud providers can be streamlined and performed via Taikun. </p>  <p>To know more about TAIKUN, you can read our docs here. You can also try Taikun for free using our online Taikun Cloud offering.</p>","title":"Swiss Knife for your DevOps"}]}